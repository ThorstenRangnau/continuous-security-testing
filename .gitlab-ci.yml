# load docker image & start docker engine
image: docker:19.03.1
services:
  - docker:19.03.1-dind

stages:
  - build
  - test

# BUILD API SCANNING
build_api_scan_zap:
  stage: build
  before_script:
    - cd apiscanning
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build zap -t $CI_REGISTRY/$CI_PROJECT_PATH:api-zap-$CI_COMMIT_SHA
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH:api-zap-$CI_COMMIT_SHA

build_api_scan_jmeter:
  stage: build
  before_script:
    - cd apiscanning
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build jmeter -t $CI_REGISTRY/$CI_PROJECT_PATH:api-jmeter-$CI_COMMIT_SHA
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH:api-jmeter-$CI_COMMIT_SHA

# BUILD WAST
build_wast_zap_script:
  stage: build
  before_script:
    - cd wasttesting
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build pentest -t $CI_REGISTRY/$CI_PROJECT_PATH:wast-zap-script-$CI_COMMIT_SHA
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH:wast-zap-script-$CI_COMMIT_SHA

build_wast_zap:
  stage: build
  before_script:
    - cd wasttesting
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build zap -t $CI_REGISTRY/$CI_PROJECT_PATH:wast-zap-$CI_COMMIT_SHA
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH:wast-zap-$CI_COMMIT_SHA

# BUILD BDST
build_bdst_selenium:
  stage: build
  before_script:
    - cd bdsttesting
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build selenium_base_tests -t $CI_REGISTRY/$CI_PROJECT_PATH:bdst-selenium-$CI_COMMIT_SHA
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH:bdst-selenium-$CI_COMMIT_SHA

build_bdst_zap:
  stage: build
  before_script:
    - cd bdsttesting
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build zap -t $CI_REGISTRY/$CI_PROJECT_PATH:bdst-zap-$CI_COMMIT_SHA
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH:bdst-zap-$CI_COMMIT_SHA

# TEST API SCAN
test_api_scan:
  stage: test
  image:
    name: docker/compose
  before_script:
    - apk add python3
    - export ZAP_URL=$CI_REGISTRY/$CI_PROJECT_PATH:api-zap-$CI_COMMIT_SHA
    - export JMETER_URL=$CI_REGISTRY/$CI_PROJECT_PATH:api-jmeter-$CI_COMMIT_SHA
    - python3 update-compose.py --file='apiscanning/docker-compose.yml' --variables 'zap_url' 'jmeter_url'
    - cd apiscanning
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker-compose up
    - ls jmeter/results/jmeter
    - ls jmeter/results/zap
  # - python3 parse_results.py 
  artifacts:
    paths:
      - jmeter/results/jmeter
      - jmeter/results/zap

# TEST WAST
test_wast:
  stage: test
  image:
    name: docker/compose
  before_script:
    - apk add python3
    - export ZAP_URL=$CI_REGISTRY/$CI_PROJECT_PATH:wast-zap-$CI_COMMIT_SHA
    - export ZAP_SCRIPT_URL=$CI_REGISTRY/$CI_PROJECT_PATH:wast-zap-script-$CI_COMMIT_SHA
    - python3 update-compose.py --file='wasttesting/docker-compose.yml' --variables 'zap_script_url' 'zap_url'
    - cd wasttesting
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker-compose up
  # - python3 parse_results.py 
  # artifacts:
  #   paths:
  #     - jmeter/results/jmeter
  #     - jmeter/results/zap


# TEST BDST
test_wast:
  stage: test
  image:
    name: docker/compose
  before_script:
    - apk add python3
    - export ZAP_URL=$CI_REGISTRY/$CI_PROJECT_PATH:bdst-zap-$CI_COMMIT_SHA
    - export SELENIUM_URL=$CI_REGISTRY/$CI_PROJECT_PATH:bdst-selenium-$CI_COMMIT_SHA
    - python3 update-compose.py --file='bdsttesting/docker-compose.yml' --variables 'selenium_url' 'zap_url'
    - cd bdsttesting
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker-compose up
  # - python3 parse_results.py 
  # artifacts:
  #   paths:
  #     - jmeter/results/jmeter
  #     - jmeter/results/zap

